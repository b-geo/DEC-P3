name: Lint and Validate dbt SQL

on:
  # Can be manually triggered
  workflow_dispatch: {}
  pull_request:
    branches: [ main ]

jobs:
  lint-and-validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dbt and SQLFluff
        run: |
          pip install dbt-snowflake sqlfluff sqlfluff-templater-dbt black

      # saves a bit of time if it fails here before doing fix
      - name: Run SQLFluff lint
        run: |
          cd orchestration/dagster_pipeline/assets/dbt/main
          sqlfluff lint models --fail-on-non-fixable models

      # Then attempt to fix what can be fixed automatically
      - name: Run SQLFluff fix
        id: sqlfluff-fix
        run: |
          cd orchestration/dagster_pipeline/assets/dbt/main
          sqlfluff fix --force --fixed-suffix fixed models
          echo "changes_made=$(git diff --name-only | wc -l | tr -d ' ')" >> $GITHUB_OUTPUT

      # Check if fixes were made and fail if needed
      - name: Check for formatting changes
        if: steps.sqlfluff-fix.outputs.changes_made != '0'
        run: |
          git diff
          echo "::error::SQL formatting issues found. Run 'sqlfluff fix' locally or push the suggested changes."
          exit 1

      - name: Auto-fix Python with Black
        run: black .

      - name: Commit Python fixes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
            commit_message: "style: Auto-fix Python formatting (Black)"
            file_pattern: "*.py"

      - name: Cache dbt packages
        uses: actions/cache@v3
        with:
            path: orchestration/dagster_pipeline/assets/dbt/main/dbt_packages
            key: ${{ runner.os }}-dbt-deps-${{ hashFiles('orchestration/dagster_pipeline/assets/dbt/main/packages.yml') }}

      - name: Test dbt compilation (requires Snowflake connection)
        env:
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DB: ${{ secrets.SNOWFLAKE_DB }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
        run: |
          cd orchestration/dagster_pipeline/assets/dbt/main
          dbt deps
          dbt compile